pub enum Operation {
    Halt,
    Set,
    Push,
    Pop,
    Equal,
    GreaterThan,
    Jump,
    JumpTrue,
    JumpFalse,
    Add,
    Multiply,
    Modulo,
    And,
    Or,
    Not,
    ReadMem,
    WriteMem,
    Call,
    Return,
    Out,
    Input,
    Noop,
}

impl From<u16> for Operation {
    fn from(opcode: u16) -> Self {
        match opcode {
            0 => Operation::Halt,
            1 => Operation::Set,
            2 => Operation::Push,
            3 => Operation::Pop,
            4 => Operation::Equal,
            5 => Operation::GreaterThan,
            6 => Operation::Jump,
            7 => Operation::JumpTrue,
            8 => Operation::JumpFalse,
            9 => Operation::Add,
            10 => Operation::Multiply,
            11 => Operation::Modulo,
            12 => Operation::And,
            13 => Operation::Or,
            14 => Operation::Not,
            15 => Operation::ReadMem,
            16 => Operation::WriteMem,
            17 => Operation::Call,
            18 => Operation::Return,
            19 => Operation::Out,
            20 => Operation::Input,
            21 => Operation::Noop,
            a if a > 21 => panic!("Invalid op code {}", opcode),
            _ => unimplemented!("Missing implementation for opcode {}", opcode),
        }
    }
}
